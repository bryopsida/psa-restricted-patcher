replicaCount: 1

image:
  repository: ghcr.io/bryopsida/psa-restricted-patcher
  pullPolicy: Always
  tag: main

tlsSecretName: "psa-restricted-patcher"
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""
# -- provide an array of maps of annotations that when present on a pod, patcher will ignore mutating pod, if empty it will not ignore any pods
ignoredAnnotations: []
  # - KEY_1: KEY_1_VALUE
  #   KEY_2: KEY_2_VALUE
  # - KEY_1: DIFF_VALUE
  #   KEY_2: DIFF_VALUE
# -- provide an array of maps of annotations that when present on a pod, patcher will mutate pod, if empty it will mutate all pods
targettedAnnotations: []
podAnnotations: {}
# -- If true, scopes the webhook to the namespace the webhook is deployed.
namespaceScoped: false
podSecurityContext:
  seccompProfile:
    type: RuntimeDefault
# -- amount of time to allot for the hook to respond, if failurePolicy is set to ignore the request will go through without modifying the resource
timeoutSeconds: 1
# -- Control the fail open or closed behavior, default is ignore to avoid breaking a cluster, this hook is intended to automatically patch to conform to the restricted security policy, the security policy is the actual gate
failurePolicy: Ignore
# -- ReinvocationPolicy can be Never or IfNeeded, this hook operates in a idempotent manner so IfNeeded is the default.
reinvocationPolicy: IfNeeded
securityContext:
  runAsUser: 1000
  runAsGroup: 1000
  runAsNonRoot: true
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true  
  capabilities:
    drop:
      - ALL

logLevel: "info"
# -- Toggle adding seccompProfile into the pod.securityContext
addSeccompProfile: true
# -- The seccompProfile to set for type
seccompProfile: RuntimeDefault
# -- The namespaces to automatically patch, if empty it will patch all namespaces
namespaces: []
# -- The default UID
defaultUid: 1001
# -- The default Groupd ID
defaultGid: 1001
# -- the default FS Groupd ID
defaultFsGroup: 1001
# -- A list of regex patterns, that if matched, the pod passes through untouched 
passthroughPatterns: []
# -- Optional namespace selector: https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#matching-requests-namespaceselector
namespaceSelector: {}
# -- Optional object selector: https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#matching-requests-objectselector
objectSelector: {}

# -- Create the RBAC rules and bindings to allow the webhook to update the caBundle value, this is needed to handle rotations, if disabled you can provide your own bindings
rbacCreate: true
resources:
  requests:
    memory: "64Mi"
    cpu: "0.1"
  limits:
    memory: "128Mi"
    cpu: "0.2"


autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

certmanager:
  # -- enable using cert manager to issue a TLS certificate, if this is not enabled you must manage your own TLS secret
  enabled: true
  # -- Use a self signed issuer managed by this helm release
  useSelfSignedIssuer: true
  # -- When not using the self packaged/managed option from useSelfSignedIssuer, specify the IssuerType
  issuerType: Issuer
  # -- When not using useSelfSignedIssuer, specify the issuer name
  issuerName: ~
